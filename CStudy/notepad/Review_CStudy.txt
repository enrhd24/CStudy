상수
1. 숫자 상수 -> 정수, 실수
2. 문자 상수 -> 문자, 문자열
3. 논리 상수 -> True, false

변수 
-> 값을 저장하기 위한 RAM의 일부 공간의 특정 메모리 공간을 가리키며 
   효율적으로 사용되도록 적당한 자료형으로 선언 되어야 함.
1. 숫자 변수 -> 정수형, 실수형
2. 문자 변수 -> 문자, 문자열

자료형의 크기와 범위
// 1.정수형 변수 , 2.실수형 변수 , 3.문자형 변수 , 4.논리형 변수

변수 이름의 작성 규칙
// 1. 식별자(변수나 함수 등의 이름입니다.)
// 2. 예약어(식별자로 사용할 수 없는 단어)_단,운영체제의 종류에 따라 다를 수 있다.

제어문자 -> 큰따옴표(" ")안에서 출력에 어떠한 효과를 주는 문자 
         ex> printf('\n');
서식지정자 -> 큰 따옴표 다음에 있는 값의 출력 서식을 정해주는 역할하는 것
         ex> printf("%d", a);

연산자 (대입, 산술)
1. 대입(=), 
2. 비트(&[AND], |[OR], ^[XOR], <<[shift] , >>[shift] , ~[보수]) , 
3. 산술(+, -, *, / , %) , 
4. 비교(>, < , >=, <=, ==, !=) , 
5. 논리(&&, || , !) ,
6. 증감(++, --) , 
7. 논리(&&, ||, !) , 
8. 참조(&[data-> address], *[포인터형 변수, 역참조]) , 
9. 복함대입(+=, -=, *=, /=, %=, etc..) 
10. 삼항 연산자 printf("%d\n, 4>3 ? 4:3); <-> printf("%d", 4<3 ? 4:3);
// (역)참조 연산자 -> &[&a_address], *[*a_포인터형 변수]

연산자 우선순위
-> 일차식, 단항, 승제, 가감, 시프트, 비교, 등가, 비트 논리
-> [(),[]],[!,~,++,--],[*./,%],[+,-],[<<,>>],[<,>,<=,>=],[&,^,|],[&&,||]
// 그 기호를 많이 아는 것 보다 그 기호의 활용을 배우는 것이 제일 중요하다.
// 정보와 지식을 확용하는 게 익숙해지면, 
   복잡한 문제 상황을 정확하게 분석하고 해결할 수 있다.

한국정보올림피아드 (KOI, Korea Olympiad in Informatics)
-> 수학적 지식과 논리적 사고능력을 필요로 하는 알고리즘 과 프로그램 작성 능력 평가

```  
1. 정수형 변수 -> char, int, long long int, short
2. 실수형 변수 -> float , double
%d -> char, short , int
%ld -> long
%lld -> long long
%u(10진), %o(8진) -> unsigned int
%x,%X -> float, double ==? 16진수
%f -> float
%lf -> long do.uble, double
%d -> char, short, int
%c -> char, short , int ==> 값에 대응하는 문자
%s -> char*(문자열) ==> 문자열
%p -> void(주소값) ==> 포인터 주소 값
```