[가장빨강]
OpenCv애서 영상 회소는 행과 열의 순서인 img(x,y)로 접근
함수와 수식의 설명에서 srx(x,y), dst(x,y)와 같이 표현함

중요한 순서
빨간색 : 한장에 한번
파란색 : 한장에 두번
초록색 : 한장의 세번

```
01. 영상 속성과 회소 접근
02. 관심 영역 ROI
03. 영상 복사
04. 영상 채널 분리 및 합성
05. 컬러 공간 변환
06. 영상의 크기 변환과 회전
07. 산술연산, 비트연산, 비교볌위, 수치연산 함수
08. 수학 및 통계함수
```

01
[파랑]
영상의 중요 속성 : shape, dtype
numpy의 속성 변경 : astype(), reshape()
영상 화소 : x축과y축 밝기 or 컬러 값 [읽기와 쓰기]

[빨강]
OpenCV 함수에서 결과 영상의 화소 자료형을 요구시
1. 화소 비트, 2. 자료형, 3. 채널 수를 명시


02
[빨강]
영상의 사각 관심 영역(ROI)
-> numpy의 슬라이싱으로 지정하여 접근

[파랑]
마우스를 이용한 ROI영역지정 함수
1. selectROI(windowNAme, img[,showCrosshart[, fromCenter]])
2. selectROIS(windowsName, img[, showCrosshar[, fromCenter]])


03
원본 영상의 데이터를 유지 및 표시
[파랑]
1. numpy.copy()
2. np.zeros()
[빨강]
3. dst = src -> (3번의 지정문은 reference을 생성하여 영상 변경시 다른 영상도 변경)


04
[초록]
1. cv2.split() : 다중채널 영상을 투플에 단일 채널 영상으로 분리
-> cv2.split(m[, mv]) -> mv
-> 다중 채널 배열을 단일 채널로의 배열로 준리하여 튜플에 출력

2. cv2.merge() : 단일 채널 영상을 병합하여 다중 채널 영상을 생성
-> cv2.merge(mv[, dst]) -> dst
-> 단일 채널 배열의 리스트를 하나의 다중 채널 배열 dst로 생성


05
cvtColor() 
: GRAY, HSV, YCrCb 등의 다양한 컬러 공간 포맷으로 변환
-> cv2.cvtColor(src, code[,dst[, dstCn]]) -> dst

[빨강]
1. src : 입력 영상
2. code : 변환 코드
3. dst : 출력영상


06
[초록]
cv2.resize() : 영상의 크기를 변환하여 영상을 확대 축소
cv2.reotate() : 영상을 90의 배수로 회전

일반적인 확대 축소 및 화전영상
cv2.getRotationMartrix2D() : 변환 행렬
cv2.warpAffine() : 영상을 변환


07
OpenCV_Python 
: 영상을 numpy.ndarray로 표현
: numpy 연산을 사용할 수 있음
: 연간 결과가 자료형의 범위를 벗어나는 경우를 주의하여 사용해야 함.

[빨강]
1. 산술 사칙연산
2. 비트연산
3. 비교연산
4. 범위연산
5. 수치연산

[파랑]
src, src1, src3 : 입력 영상
dst : 연산의결과 영상
[] : 옵션
mask : 8-비트 1-채널 마스크 영상 [인 화소에서만 연산 수행]
-> : 반환 값을 표시함


08
수학 및 통계랑연산을 위한 주요 함수

[초록]
1. 정규화
2. 최대최소
3. 통계
4. 난수
5. 선형대수
6. 정렬