
ROS(Robot Operation System)
-> Meta-Operating System
: 기존의 전통적인 운영체제를 이용하고 있다.
: 분산 컴퓨터 자원을 활용하고, OS처리 등을 실행하는 시스템
: 프레임워크를 기반으로 로봇 응용SW를 위한 라이브러리 제공

ROBOT <-> 메타 운영체제 <-> SENSOR  // 로봇, 센서 회사
          ->  APP  <-            // 개발자, 유저

APP   -> 패키지, .deb, Wiki페이지, 공식 패키지 제공
ROS   -> 애플리케이션, 라이브러리, 파일시스템, 지능모듈 등등
ROBOT -> 90종류 이상의 로봇, 80종류 이상의 센서 지원
SENSOR

ROS 용어 정리
1. Node
- 최소 단위의 실행 가능한 프로세스
- 각 노드는 메시지 통신으로 데이터를 주고 받는다.
- 최소한의 실행단위로 프로그램을 나누어 작업한다.
2. Package
- 노드 실행을 위한 정보 등을 묶어 놓은 것.
- 패키지의 묶음을 메타패키지라 하고 따로 분리한다.
3. Message
- 노드간의 데이터를 주고 받는 것.
- 메시지는 integer, floating, point, boolean
- 메시지들의 배열과 같은 구조도 사용할 수 있다.

- Service, Service, server, Service client
  - 서비스 요청, 서비스 응답
- Action, Action server, Action client
  - 액션 목표 전달 = 액션 피드백 전달 = 액션 결과 전달


노드 간의 메시지 통신[ROS 에서 가장 기본이 되는 기술적 포인트]
1. 마스터 구동 -> roscore
2. 서브스크라이버 노드 구동 -> rosrun
3. 퍼블리셔 노드 구동
4. 퍼블리셔 정보 알림
5. 퍼블리셔 노드에 접속 요청 -> TCPROS 접속을 요청
6. 서브스크라이버 노드에 접속 응답 -> TCPROS 접속 응답
7. TCP 접속 -> TCPROS 접속
8. 메시지 전송 -> 노드가 서브크라이버 노드에게 메시지 전송
9. 서비스 요청 및 응답
// 매시지전송(토픽) 
-> 지속적으로 메시지 전송(연속성) -> 단 접속이 끝나면 전송 취소

정리(turtlesim 패키지)
roscore 
rosrun turtkesim turtlesim_node
rostun turtlesim turtle_teleop_key
rosrun rqt_graph rqt_graph

ROS메시지
-> 데이터를 주고 받을 때 사용하는 데이터 형태
1. 토픽, 서비스, 액션
2. 단순 자료형
3. 메시지 안에 메시지를 품고 있는 데이터 구조도
4. 메시지들이 나열된 배열과 같은 구조도

네임(Names)
-> 노드, 메시지 가지는 고유의 식별자
-> global, private
-> 그래프라는 추상 데이터 형태(abstract data type)를 지원

---------------------------------------------------------------

ROS 기본 프로그래밍

프로그래밍 전에 알아둬야 할 사항
1. 표준 단위 , 2. 좌표 표현 방식 , 3. 프로그래밍 규칙

메시지 통신의 종류
1. 토픽(topic) - 퍼블리셔 [토픽] 서브스크라이버
2. 서비스(Service) - 서비스 서버 [요청,응답] 서비스 클라이언트
3. 액션(Action) - 서버 [목표,피드백,결과] 클라이언트
4. 매개변수(Parameter) - 파라미터 [ROS Master(쓰기,읽기)] 파라미터

Topic 사용시 
송신 : 'Publisher' , 수신 : 'Subscriber'이라한다.

------------------------------------------------------------------

Node Test
ROS설치하고 간단한 node구동 테스트
- ROS는 공식적으로 Ubuntu 위에서 구동된다.

Carkin : ROS의 빌드 시스템
gedit : GUI기반의 메모장이나 워드패드
Shell 
: OS의기능(service)를 직접 실행할 수 있게 하는 interface
: Command-line형식을 이용 및 GUI를 이용하는 것도 있음.
Bash 
: 하나하나의 command를 직접 입력시켜 원하는 기능을 수행하는 형태의 언어
: Bash는 그러한 scripting lanugage의 한 종류 입니다.
Dot file : 사용자 지정설정을 저장 시 사용하는 경로 및 파일을 볼 수 있음.
.bashrc : Dot file의 한 종류 , 새 처미널을 열 때마다 그 명령이 수행된다.

환경설정
1. ROS Indigo 환경 설정 bash shell 실행 
    _ source /opt/ros/Indigo.setup.bash
2. 작업 디렉토리 생성 및 초기화 
    _ catkin_init_workspace
3. 컴파일하기 
    _ catkin_make